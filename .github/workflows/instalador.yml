name: Build and Deploy to Private Docker Hub

on:
  push:
    branches: [v1*]

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        working-directory: ./paineis-v2-front
        run: yarn

      - name: Build React project
        working-directory: ./paineis-v2-front
        run: |
          cat <<EOF > .env
          ${{ vars.ENV_FRONT }}
          EOF
          CI=false npm run build --prod

  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10" # Use the Python version you need

      - name: Install PyInstaller
        working-directory: ./painel-esus
        run: |
          python -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Create backend environment
        working-directory: ./painel-esus
        run: |
          cat <<EOF > .env
          ${{ vars.ENV_BACK }}
          EOF

      - name: Extract version from branch name
        id: extract_version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/heads/release/}" >> $GITHUB_ENV

  create-exe-files:
    needs: [build-frontend, build-backend]
    runs-on: windows-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10" # Use the Python version you need

      - name: Install PyInstaller
        run: pip install pyinstaller
        shell: cmd

      - name: Build EXE config
        working-directory: ./painel-esus
        run: |
          pyinstaller --icon=.\icon\config.ico -n config --onefile .\interface.py
        shell: cmd

      - name: Build EXE run
        working-directory: ./painel-esus
        run: |
          pyinstaller --icon=.\icon\Icon_Painel_Purple_ICO.ico -n painel-esus --onefile .\run.py
        shell: cmd

  notify-slack:
    runs-on: ubuntu-latest
    needs: create-exe-files

    steps:
      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          slack-message: "Deploy painel-esus gerado com sucesso!"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
