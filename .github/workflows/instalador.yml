name: Build and Deploy to Private Docker Hub

on:
  push:
    branches: [v*]

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        working-directory: ./paineis-v2-front
        run: yarn

      - name: Build React project
        working-directory: ./paineis-v2-front
        run: |
          cat <<EOF > .env
          ${{ vars.ENV_FRONT }}
          EOF
          CI=false npm run build --prod

      - name: Print directory
        run: |
          ls -la
          cd ./paineis-v2-front/static-files
          ls -la

      # Salva a pasta 'paineis-v2-front/static-files' como um artifact
      - uses: actions/upload-artifact@v3
        with:
          name: Build
          path: ./paineis-v2-front/static-files

  build-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10" # Use the Python version you need

      - name: Install PyInstaller
        working-directory: ./painel-esus
        run: |
          python -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Create backend environment
        working-directory: ./painel-esus
        run: |
          cat <<EOF > .env
          ${{ vars.ENV_BACK }}
          EOF

      - name: Extract version from branch name
        id: extract_version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/heads/release/}" >> $GITHUB_ENV

  create-exe-files:
    needs: [build-frontend, build-backend]
    runs-on: windows-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      # Aqui você pode usar os arquivos estáticos baixados para criar o EXE
      - name: Create EXE files
        run: |
          # Comandos para usar os arquivos estáticos e criar o EXE
          dir ./paineis-v2-front

      # # Baixa o artifact salvo no job anterior
      # - name: Download artifacts
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: my-artifact
      #     path: ./paineis-v2-front

      # - name: Display structure of downloaded files
      #   run: ls -R ./paineis-v2-front

      # Aqui você pode usar os arquivos estáticos baixados para criar o EXE
      - name: Create EXE files
        run: |
          # Comandos para usar os arquivos estáticos e criar o EXE
          dir

      - name: Download files
        uses: actions/download-artifact@v3
        with:
          name: Build
          path: bijay
      - run: dir

      - name: Create EXE files
        run: |
          # Comandos para usar os arquivos estáticos e criar o EXE
          cd bijay
          dir
      # - name: Move static files
      #   run : |
      #     dir .\paineis-v2-front
      #     if exist .\paineis-v2-front\static-files rmdir /s /q .\paineis-v2-front\static-files
      #     dir .\paineis-v2-front
      #     mkdir .\paineis-v2-front\static-files
      #     dir .\paineis-v2-front
      #     xcopy frontend-static-files\* .\paineis-v2-front\static-files /s /e /i /y
      #   shell: cmd

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10" # Use the Python version you need

      - name: Install PyInstaller
        run: pip install pyinstaller
        shell: cmd

      - name: Build EXE config
        working-directory: ./painel-esus
        run: |
          python -m pip install --upgrade pip
          pip3 install -r requirements.txt
          pyinstaller --icon=.\icon\config.ico -n config --onefile .\interface.py
        shell: cmd

      - name: Build EXE run
        working-directory: ./painel-esus
        run: |
          pyinstaller --icon=.\icon\Icon_Painel_Purple_ICO.ico -n painel-esus --onefile .\run.py
        shell: cmd

      - name: Set up Inno Setup
        run: |
          curl -LO https://jrsoftware.org/download.php/is.exe
          start /wait is.exe /SILENT /VERYSILENT
        shell: cmd

      - name: Build installer
        run: |
          dir .
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" ".\instalador\buildPainelScript2.5.iss"
        shell: cmd

  notify-slack:
    runs-on: ubuntu-latest
    needs: create-exe-files

    steps:
      - name: Notify Slack
        run: |
          curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }}  -H 'Content-type: application/json' --data '{"text": "*Instalador Gerado* :inbox_tray:\n  Versão: *${{ github.head_ref || github.ref_name }}*"}'
