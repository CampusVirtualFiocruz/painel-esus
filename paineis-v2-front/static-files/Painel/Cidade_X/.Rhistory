exit
library(readr)
query_aesop_cidciap_semana_epidemiologica_carga_20230510 <- read_csv("Downloads/download/query-aesop-cidciap-semana-epidemiologica-carga-20230510.csv",
col_types = cols(ANO = col_integer(),
SEMANA = col_integer(), CO_MUNICIPIO_IBGE = col_integer(),
QT = col_integer()))
View(query_aesop_cidciap_semana_epidemiologica_carga_20230510)
library(readr)
query_aesop_cidciap_semana_epidemiologica_carga_20230510 <- read_csv("Downloads/download/query-aesop-cidciap-semana-epidemiologica-carga-20230510.csv",
+     col_types = cols(ANO = col_integer(),
query_aesop_cidciap_semana_epidemiologica_carga_20230510 <- read_csv("Downloads/download/query-aesop-cidciap-semana-epidemiologica-carga-20230510.csv",
+     col_types = cols(ANO = col_integer(),
View(query_aesop_cidciap_semana_epidemiologica_carga_20230510)
library(readr)
library(readr)
query_aesop_cidciap_semana_epidemiologica_carga_20230510 <- read_csv("Downloads/download/query-aesop-cidciap-semana-epidemiologica-carga-20230510.csv")
View(query_aesop_cidciap_semana_epidemiologica_carga_20230510)
View(query_aesop_cidciap_semana_epidemiologica_carga_20230510)
View(query_aesop_cidciap_semana_epidemiologica_carga_20230510)
library(readxl)
dqi_sisab2023 <- read_excel("Documents/dqi_sisab2023.xlsx")
View(dqi_sisab2023)
View(query_aesop_cidciap_semana_epidemiologica_carga_20230510)
rm(query_aesop_cidciap_semana_epidemiologica_carga_20230510)
library(readxl)
PEC_MUN <- read_excel("Documents/PEC_MUN.xlsx")
View(PEC_MUN)
df <- merge(PEC_MUN, dqi_sisab2023, by = "NOME_MUN")
View(df)
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(merged_data, file = "sisab_pecxdqi.xlsx")
write.xlsx(df, file = "sisab_pecxdqi.xlsx")
install.packages("tidyverse")
install.packages("palmerpenguins")
install.packages("palmerpenguins")
#| label: plot-penguins
#| warning: false
#| echo: false
ggplot(penguins,
aes(x = flipper_length_mm, y = bill_length_mm)) +
geom_point(aes(color = species, shape = species)) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(
title = "Flipper and bill length",
subtitle = "Dimensions for penguins at Palmer Station LTER",
x = "Flipper length (mm)", y = "Bill length (mm)",
color = "Penguin species", shape = "Penguin species"
) +
theme_minimal()
#| label: load-packages
#| include: false
library(tidyverse)
library(palmerpenguins)
#| label: plot-penguins
#| warning: false
#| echo: false
ggplot(penguins,
aes(x = flipper_length_mm, y = bill_length_mm)) +
geom_point(aes(color = species, shape = species)) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(
title = "Flipper and bill length",
subtitle = "Dimensions for penguins at Palmer Station LTER",
x = "Flipper length (mm)", y = "Bill length (mm)",
color = "Penguin species", shape = "Penguin species"
) +
theme_minimal()
?ChickWeight
View(
ChickWeight)
Summary(ChickWeight)
Summary.data.frame(ChickWeight)
describe(ChickWeight)
summary(ChickWeight)
str(ChickWeight)
?ChickWeight
View(ChickWeight)
?ChickWeight
View(ChickWeight)
str(ChickWeight)
head(ChickWeight)
tail(ChickWeight)
head(ChickWeight, 3L)
tail(ChickWeight, 10L)
head(ChickWeight, -570L)
# Filtrando com base em uma variável
chick0 <- ChickWeight[ChickWeight$Time == 0, ]chick0
chick0 <- ChickWeight[ChickWeight$Time == 0, ]
allchick <- ChickWeight[1==1]
allchick <- ChickWeight[1==0]
allchick <- ChickWeight[1==0]
View(allchick)
View(allchick)
View(allchick)
View(allchick)
View(allchick)
allchick <- ChickWeight[1==1]
View(allchick)
View(allchick)
chick0 <- ChickWeight[ChickWeight$Time == 0, ]
View(chick0)
View(chick0)
chick0
chick0_ascend <- chick0[order(chick0$weight),]
chick0_ascend <- chick0[order(chick0$weight), ]
head(chick0_ascend, 15)# Look at first 15 rows of data frame, chick0_ascend
?order
chick0_descend <- chick0[order(-chick0$weight), ]
head(chick0_descend, 15) #Look at first 15 rows of data frame, chick0_descend
chick0_diet <- chick0[order(-chick0$Diet), ]
# Não é possível ordenar por Fatores/Categorias
chick0_diet <- chick0[order(chick0$Diet), ]
View(chick0_diet)
View(chick0_diet)
chick0_arr <- chick0[order(chick0$Diet, chick0$weight), ]
chick0_arr
names(ChickWeight)[2] <- "Days"
head(ChickWeight)# Check if successful
View(ChickWeight)
View(ChickWeight)
names(allchick)[2] <- "Days"
View(allchick)
View(allchick)
names(ChickWeight)[names(ChickWeight) == "Days"] <- "Time"
head(ChickWeight)
?names
head(ChickWeight, 10)
ChickWeight[7, 1] = 16
head(ChickWeight, 10)
# Voltar para 106
ChickWeight$weight[7] = 106
head(ChickWeight, 10)
summary(ChickWeight)
table(chickwts$feed)
by(chickwts$weight, chickwts$feed, mean)
by(chickwts$weight, chickwts$feed, max)
by(chickwts$weight, chickwts$feed, sd)
?by
library(tidyverse)
?filter
?tidyverse
?dplyr
vignettes: browseVignettes(package = "dplyr")
browseVignettes(package = "dplyr")
?walk
??walk
exit
library(readr)
library(tidyverse)
library(openssl)
library(arrow)
setwd("~/Code/Cidade_X")
df <- read_delim("tb_fat_atendimento_individual.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
df <- read.csv2("tb_fat_atendimento_individual.csv")
View(df)
str(df)
atendimentos <- df %>%
select(co_dim_municipio,
co_seq_fat_atd_ind,
co_dim_profissional_1,
co_dim_cbo_1,
co_dim_unidade_saude_1,
co_dim_tempo,
co_dim_faixa_etaria,
co_dim_sexo,
co_dim_local_atendimento,
co_dim_tipo_atendimento,
nu_peso,
nu_altura,
ds_filtro_cids,
ds_filtro_ciaps,
ds_filtro_proced_avaliados,
ds_filtro_proced_solicitados,
co_fat_cidadao_pec)
glimpse(df)
glimpse(atendimentos)
atendimentos <- df %>%
select(co_seq_fat_atd_ind,
co_dim_profissional_1,
co_dim_cbo_1,
co_dim_unidade_saude_1,
co_dim_tempo,
co_dim_faixa_etaria,
co_dim_sexo,
co_dim_local_atendimento,
co_dim_tipo_atendimento,
nu_peso,
nu_altura,
ds_filtro_cids,
ds_filtro_ciaps,
ds_filtro_proced_avaliados,
ds_filtro_proced_solicitados,
co_fat_cidadao_pec)
glimpse(atendimentos)
data <- ymd('co_dim_tempo')
df$co_dim_tempo <- as.character(df$co_dim_tempo)
data <- ymd('co_dim_tempo')
data <- ymd(df_co_dim_tempo)
data <- ymd(df$co_dim_tempo)
glimpse(atendimentos)
df$data <- ymd(df$co_dim_tempo)
df <- NULL
data <- NULL
rm(df)
rm(data)
glimpse(atendimentos)
atendimentos$co_dim_tempo <- as.character(atendimentos$co_dim_tempo)
atendimentos$data <- ymd(atendimentos$co_dim_tempo)
glimpse(atendimentos)
max(atendimentos$data)
year(max(atendimentos$data))
year(today)
today
Sys.Date()
year(Sys.Date())
year(Sys.Date()) - year(max(atendimentos$data))
salto = year(Sys.Date()) - year(max(atendimentos$data))
atendimentos$co_dim_tempo %m+% years(salto)
View(atendimentos)
View(atendimentos)
atendimentos$data %m+% years(salto)
(max(atendimentos$data))
atendimentos$data <- atendimentos$data %m+% years(salto)
(max(atendimentos$data))
atendimentos |> filter (data > Sys.Date())
atendimentos <- atendimentos |> filter (data > Sys.Date())
(max(atendimentos$data))
# 2. Importando Dataset ----
setwd("~/Code/Cidade_X")
df <- read.csv2("tb_fat_atendimento_individual.csv")
# Preparar o código que conectaria no banco local (ou na nuvem), tratando
# dados restritos como IP, nome do banco, user, pass como variável de ambiente
# 3. Inspecionando e selecionando as colunas ----
View(df)
str(df)
atendimentos <- df %>%
select(co_seq_fat_atd_ind,
co_dim_profissional_1,
co_dim_cbo_1,
co_dim_unidade_saude_1,
co_dim_tempo,
co_dim_faixa_etaria,
co_dim_sexo,
co_dim_local_atendimento,
co_dim_tipo_atendimento,
nu_peso,
nu_altura,
ds_filtro_cids,
ds_filtro_ciaps,
ds_filtro_proced_avaliados,
ds_filtro_proced_solicitados,
co_fat_cidadao_pec)
# 4. Ajustando data de atendimentos ----
glimpse(atendimentos)
atendimentos$co_dim_tempo <- as.character(atendimentos$co_dim_tempo)
atendimentos$data <- ymd(atendimentos$co_dim_tempo)
# Criei nova variável correspondendo a data do atendimento. Avaliar se mantemos
# o nome como co_dim_tempo
year(max(atendimentos$data))
year(Sys.Date())
salto = year(Sys.Date()) - year(max(atendimentos$data))
atendimentos$data <- atendimentos$data %m+% years(salto)
(max(atendimentos$data))
atendimentos <- atendimentos |> filter (data < Sys.Date())
(max(atendimentos$data))
rm(df)
atendimentos$co_fat_cidadao_pec <- as.character(atendimentos$co_fat_cidadao_pec)
atendimentos$paciente_id <- md5(atendimentos$co_fat_cidadao_pec)
atendimentos$co_fat_cidadao_pec <- NULL
atendimentos$co_dim_municipio <- NULL
str(atendimentos)
write_csv2(atendimentos, file="atendimentos.csv")
atendimentos_final <- read.csv2(file="atendimentos.csv")
str(atendimentos_final)
atendimentos$co_dim_tempo <- atendimentos$data
rm(atendimentos$data)
rm('atendimentos$data')
atendimentos$data
atendimentos$data <- null
atendimentos$data <- NULL
View(atendimentos)
View(atendimentos)
atendimentos$co_fat_cidadao_pec <- as.character(atendimentos$co_fat_cidadao_pec)
atendimentos$paciente_id <- md5(atendimentos$co_fat_cidadao_pec)
atendimentos$co_fat_cidadao_pec <- NULL
str(atendimentos)
write_csv2(atendimentos, file="atendimentos.csv")
atendimentos_final <- read.csv2(file="atendimentos.csv")
str(atendimentos_final)
write_parquet(atendimentos_final, "atendimentos.parquet")
