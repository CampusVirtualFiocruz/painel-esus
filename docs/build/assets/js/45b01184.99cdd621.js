"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1694],{5204:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=s(4848),r=s(8453);const o={},t="Module city_informations_repository",a={id:"modulos/infra/db/repositories/city_information/city_informations_repository",title:"Module city_informations_repository",description:"Informa\xe7\xf5es do munic\xedpio e de suas unidades/equipes.",source:"@site/docs/modulos/infra/db/repositories/city_information/city_informations_repository.md",sourceDirName:"modulos/infra/db/repositories/city_information",slug:"/modulos/infra/db/repositories/city_information/city_informations_repository",permalink:"/painel-esus/docs/modulos/infra/db/repositories/city_information/city_informations_repository",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Module children.children_repository",permalink:"/painel-esus/docs/modulos/infra/db/repositories/children/children_repository"},next:{title:"Module demographic.age_groups_repository",permalink:"/painel-esus/docs/modulos/infra/db/repositories/demographic/age_groups_repository"}},d={},c=[{value:"Classes",id:"classes",level:2},{value:"Ancestors (in MRO)",id:"ancestors-in-mro",level:3},{value:"Methods",id:"methods",level:3},{value:"Ancestors (in MRO)",id:"ancestors-in-mro-1",level:3},{value:"Methods",id:"methods-1",level:3}];function l(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"module-city_informations_repository",children:"Module city_informations_repository"}),"\n",(0,i.jsx)(n.p,{children:"Informa\xe7\xf5es do munic\xedpio e de suas unidades/equipes."}),"\n",(0,i.jsx)(n.p,{children:"Responsabilidades principais:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Buscar dados gerais do munic\xedpio (c\xf3digo IBGE, UF, CEP etc.)."}),"\n",(0,i.jsx)(n.li,{children:"Listar unidades de sa\xfade."}),"\n",(0,i.jsx)(n.li,{children:"Listar equipes associadas \xe0s unidades."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'Quando a vari\xe1vel de ambiente "MOCK=True" estiver definida, m\xe9todos\r\nretornar\xe3o dados fict\xedcios \xfateis para desenvolvimento e testes.'}),"\n",(0,i.jsx)(n.h2,{id:"classes",children:"Classes"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"AlchemyEncoder(*, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)"}),"\r\n:   Encoder JSON para serializar modelos do SQLAlchemy."]}),"\n",(0,i.jsx)(n.p,{children:"Converte inst\xe2ncias de modelos em dicion\xe1rios\r\nJSON-serializ\xe1veis, ignorando atributos n\xe3o serializ\xe1veis."}),"\n",(0,i.jsx)(n.p,{children:"Constructor for JSONEncoder, with sensible defaults."}),"\n",(0,i.jsx)(n.p,{children:"If skipkeys is false, then it is a TypeError to attempt\r\nencoding of keys that are not str, int, float or None.  If\r\nskipkeys is True, such items are simply skipped."}),"\n",(0,i.jsx)(n.p,{children:"If ensure_ascii is true, the output is guaranteed to be str\r\nobjects with all incoming non-ASCII characters escaped.  If\r\nensure_ascii is false, the output can contain non-ASCII characters."}),"\n",(0,i.jsx)(n.p,{children:"If check_circular is true, then lists, dicts, and custom encoded\r\nobjects will be checked for circular references during encoding to\r\nprevent an infinite recursion (which would cause an RecursionError).\r\nOtherwise, no such check takes place."}),"\n",(0,i.jsx)(n.p,{children:"If allow_nan is true, then NaN, Infinity, and -Infinity will be\r\nencoded as such.  This behavior is not JSON specification compliant,\r\nbut is consistent with most JavaScript based encoders and decoders.\r\nOtherwise, it will be a ValueError to encode such floats."}),"\n",(0,i.jsx)(n.p,{children:"If sort_keys is true, then the output of dictionaries will be\r\nsorted by key; this is useful for regression tests to ensure\r\nthat JSON serializations can be compared on a day-to-day basis."}),"\n",(0,i.jsx)(n.p,{children:"If indent is a non-negative integer, then JSON array\r\nelements and object members will be pretty-printed with that\r\nindent level.  An indent level of 0 will only insert newlines.\r\nNone is the most compact representation."}),"\n",(0,i.jsxs)(n.p,{children:["If specified, separators should be an (item_separator, key_separator)\r\ntuple.  The default is (', ', ': ') if ",(0,i.jsx)(n.em,{children:"indent"})," is ",(0,i.jsx)(n.code,{children:"None"})," and\r\n(',', ': ') otherwise.  To get the most compact JSON representation,\r\nyou should specify (',', ':') to eliminate whitespace."]}),"\n",(0,i.jsxs)(n.p,{children:["If specified, default is a function that gets called for objects\r\nthat can't otherwise be serialized.  It should return a JSON encodable\r\nversion of the object or raise a ",(0,i.jsx)(n.code,{children:"TypeError"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"ancestors-in-mro",children:"Ancestors (in MRO)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"json.encoder.JSONEncoder"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"default(self, obj)"}),"\r\n:   Implement this method in a subclass such that it returns\r\na serializable object for ",(0,i.jsx)(n.code,{children:"o"}),", or calls the base implementation\r\n(to raise a ",(0,i.jsx)(n.code,{children:"TypeError"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"For example, to support arbitrary iterators, you could\r\nimplement default like this::"}),"\n",(0,i.jsx)(n.p,{children:"def default(self, o):\r\ntry:\r\niterable = iter(o)\r\nexcept TypeError:\r\npass\r\nelse:\r\nreturn list(iterable)"}),"\n",(0,i.jsx)(n.h1,{id:"let-the-base-class-default-method-raise-the-typeerror",children:"Let the base class default method raise the TypeError"}),"\n",(0,i.jsx)(n.p,{children:"return super().default(o)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CityInformationsRepository()"}),"\r\n:   Implementa\xe7\xe3o do reposit\xf3rio de informa\xe7\xf5es da cidade."]}),"\n",(0,i.jsx)(n.p,{children:"Fornece opera\xe7\xf5es para recuperar informa\xe7\xf5es do munic\xedpio, unidades de\r\nsa\xfade e equipes."}),"\n",(0,i.jsx)(n.h3,{id:"ancestors-in-mro-1",children:"Ancestors (in MRO)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"src.data.interfaces.city_information_repository.CityInformationRepository"}),"\n",(0,i.jsx)(n.li,{children:"abc.ABC"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"methods-1",children:"Methods"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"get_city_info(self, cnes:\xa0int\xa0=\xa0None) \u2011> Dict"}),"\r\n:   Obt\xe9m informa\xe7\xf5es gerais do munic\xedpio."]}),"\n",(0,i.jsx)(n.p,{children:'Retorna DataFrame com colunas como "municipio", "cep",\r\n"codibge", "uf" e "estado".'}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"get_teams(self, cnes:\xa0int\xa0=\xa0None)"}),"\r\n:   Lista de equipes de sa\xfade."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"get_units(self) \u2011> Dict"}),"\r\n:   Lista unidades de sa\xfade do munic\xedpio."]}),"\n",(0,i.jsx)(n.p,{children:"Retorna DataFrame com a listagem de unidades."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"get_units_with_patients(self) \u2011> Dict"}),"\r\n:   Lista unidades de sa\xfade com agrega\xe7\xe3o de pacientes."]}),"\n",(0,i.jsx)(n.p,{children:"Retorna DataFrame com unidades e informa\xe7\xf5es agregadas de pacientes."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);