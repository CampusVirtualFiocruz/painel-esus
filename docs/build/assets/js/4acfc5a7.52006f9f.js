"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8493],{8453:(e,r,a)=>{a.d(r,{R:()=>t,x:()=>i});var n=a(6540);const o={},s=n.createContext(o);function t(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),n.createElement(s.Provider,{value:r},e.children)}},9887:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=a(4848),o=a(8453);const s={},t="Module interfaces.oral_health_dashboard_repository",i={id:"modulos/data/interfaces/oral_health_dashboard_repository",title:"Module interfaces.oral_health_dashboard_repository",description:"Interface do reposit\xf3rio de Sa\xfade Bucal para o dashboard.",source:"@site/docs/modulos/data/interfaces/oral_health_dashboard_repository.md",sourceDirName:"modulos/data/interfaces",slug:"/modulos/data/interfaces/oral_health_dashboard_repository",permalink:"/painel-esus/docs/modulos/data/interfaces/oral_health_dashboard_repository",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Module interfaces.demographic_repository",permalink:"/painel-esus/docs/modulos/data/interfaces/demographic_repository"},next:{title:"infra/db/repositories",permalink:"/painel-esus/docs/category/infradbrepositories"}},d={},c=[{value:"Classes",id:"classes",level:2},{value:"Ancestors (in MRO)",id:"ancestors-in-mro",level:3},{value:"Methods",id:"methods",level:3}];function l(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"module-interfacesoral_health_dashboard_repository",children:"Module interfaces.oral_health_dashboard_repository"}),"\n",(0,n.jsx)(r.p,{children:"Interface do reposit\xf3rio de Sa\xfade Bucal para o dashboard."}),"\n",(0,n.jsx)(r.p,{children:"Define o contrato para consultas agregadas e\r\nlistas nominais, incluindo pagina\xe7\xe3o e exporta\xe7\xe3o."}),"\n",(0,n.jsx)(r.p,{children:"Opcionalmente filtradas por CNES, equipe e categoria."}),"\n",(0,n.jsx)(r.h2,{id:"classes",children:"Classes"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"OralHealthDashboardRepositoryInterface()"}),"\r\n:   Helper class that provides a standard way to create an ABC using\r\ninheritance."]}),"\n",(0,n.jsx)(r.h3,{id:"ancestors-in-mro",children:"Ancestors (in MRO)"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"abc.ABC"}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"donwload_nominal_list(self, cnes:\xa0int\xa0=\xa0None, equipe:\xa0int\xa0=\xa0None, category:\xa0str\xa0=\xa0'atendidas') \u2011> ast.Dict"}),"\r\n:"]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"find_filter_nominal(self, cnes:\xa0int, page:\xa0int\xa0=\xa00, pagesize:\xa0int\xa0=\xa010, nome:\xa0str\xa0=\xa0None, cpf:\xa0str\xa0=\xa0None, equipe:\xa0int\xa0=\xa0None, query:\xa0str\xa0=\xa0None, sort=[], category:\xa0str\xa0=\xa0'atendidas') \u2011> pandas.core.frame.DataFrame"}),"\r\n:   Busca lista nominal com filtros e pagina\xe7\xe3o."]}),"\n",(0,n.jsx)(r.p,{children:"Aplica filtros por nome, CPF, equipe e consulta; permite ordena\xe7\xe3o\r\ne segmenta\xe7\xe3o por categoria."}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"get_oral_health_cares_by_gender(self, cnes:\xa0int\xa0=\xa0None, equipe:\xa0int\xa0=\xa0None, category:\xa0str\xa0=\xa0None)"}),"\r\n:   Agregados de atendimento por sexo."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"get_oral_health_cares_by_race(self, cnes=None, equipe=None, category:\xa0str\xa0=\xa0None) \u2011> pandas.core.frame.DataFrame"}),"\r\n:   Agregados de atendimento por ra\xe7a/cor."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"get_oral_health_conclued_treatment(self, cnes=None, equipe=None, category:\xa0str\xa0=\xa0None) \u2011> pandas.core.frame.DataFrame"}),"\r\n:   Totais de tratamentos odontol\xf3gicos conclu\xeddos."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"get_oral_health_extraction(self, cnes:\xa0int\xa0=\xa0None, equipe:\xa0int\xa0=\xa0None, category:\xa0str\xa0=\xa0None)"}),"\r\n:   Retorna dados brutos para extra\xe7\xe3o."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"get_oral_health_first_appointment(self, cnes=None, equipe=None, category:\xa0str\xa0=\xa0None) \u2011> pandas.core.frame.DataFrame"}),"\r\n:   Quantidade/percentual de primeira consulta odontol\xf3gica."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"get_oral_health_prevention_procedures(self, cnes=None, equipe=None, category:\xa0str\xa0=\xa0None) \u2011> pandas.core.frame.DataFrame"}),"\r\n:   Totais de procedimentos preventivos realizados."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"oral_health_get_atraumatic_treatment(self, cnes=None, equipe=None, category:\xa0str\xa0=\xa0None) \u2011> pandas.core.frame.DataFrame"}),"\r\n:   Ocorr\xeancias de tratamento restaurador atraum\xe1tico (TRA)."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"oral_health_get_supervised_brushing(self, cnes=None, equipe=None, category:\xa0str\xa0=\xa0None) \u2011> pandas.core.frame.DataFrame"}),"\r\n:   Indicadores de escova\xe7\xe3o supervisionada."]}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"total_ubs(self, cnes:\xa0int\xa0=\xa0None, equipe:\xa0int\xa0=\xa0None) \u2011> ast.Dict"}),"\r\n:"]})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);